name: Build and Test Backend Services
on:
  push:
    branches: [ dev-ops ]
  pull_request:
    branches: [ dev-ops ]
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Install dependencies in shared/ and each service
        run: |
          echo "====================================================="
          echo "Installing dependencies in shared/"
          echo "====================================================="
          cd shared
          npm install
          cd ../services
          for service in */; do
            if [ "$service" != "infra/" ]; then
              service_name=${service%/}
              echo "====================================================="
              echo "Processing $service_name"
              echo "====================================================="
              cd $service_name
              npm install
              # npm run lint
              # npm run test
              cd ..
            fi
          done
      
      - name: Build Docker Images
        run: |
          # Build from the root directory where the Dockerfile can properly access both services/ and shared/
          docker build --no-cache -f services/user-service/Dockerfile -t ashritha07/user-service:${{ github.sha }} .
          # docker build --no-cache -f services/consumer-service/Dockerfile -t ashritha07/consumer-service:${{ github.sha }} .
          # docker build --no-cache -f services/policy-service/Dockerfile -t ashritha07/policy-service:${{ github.sha }} .
      
      - name: Check image sizes
        run: |
          docker image inspect ashritha07/user-service:${{ github.sha }} --format='{{.Size}}' | awk '{print "user-service image size: " $1/1024/1024 " MB"}'
          # Additional services would be checked here
      
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        
      - name: Push Docker Images
        run: |
          docker push ashritha07/user-service:${{ github.sha }}
          # docker push ashritha07/consumer-service:${{ github.sha }}
          # docker push ashritha07/policy-service:${{ github.sha }}